{"ast":null,"code":"import _slicedToArray from\"/Users/raymondburgess/Dapps/blockchain-developer-bootcamp-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/raymondburgess/Dapps/blockchain-developer-bootcamp-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{get,groupBy,reject,maxBy,minBy}from'lodash';import{createSelector}from'reselect';import moment from'moment';import{ETHER_ADDRESS,GREEN,RED,tokens,ether,formatBalance}from'../helpers';var account=function account(state){return get(state,'web3.account');};export var accountSelector=createSelector(account,function(a){return a;});var web3=function web3(state){return get(state,'web3.connection');};export var web3Selector=createSelector(web3,function(w){return w;});var tokenLoaded=function tokenLoaded(state){return get(state,'token.loaded',false);};export var tokenLoadedSelector=createSelector(tokenLoaded,function(tl){return tl;});var token=function token(state){return get(state,'token.connection');};export var tokenSelector=createSelector(token,function(t){return t;});var exchangeLoaded=function exchangeLoaded(state){return get(state,'exchange.loaded',false);};export var exchangeLoadedSelector=createSelector(exchangeLoaded,function(el){return el;});var exchange=function exchange(state){return get(state,'exchange.connection');};export var exchangeSelector=createSelector(exchange,function(e){return e;});export var contractsLoadedSelector=createSelector(tokenLoaded,exchangeLoaded,function(tl,el){return tl&&el;});// All Orders\nvar allOrdersLoaded=function allOrdersLoaded(state){return get(state,'exchange.allOrders.loaded',false);};var allOrders=function allOrders(state){return get(state,'exchange.allOrders.data',[]);};// Cancelled orders\nvar cancelledOrdersLoaded=function cancelledOrdersLoaded(state){return get(state,'exchange.cancelledOrders.loaded',false);};export var cancelledOrdersLoadedSelector=createSelector(cancelledOrdersLoaded,function(loaded){return loaded;});var cancelledOrders=function cancelledOrders(state){return get(state,'exchange.cancelledOrders.data',[]);};export var cancelledOrdersSelector=createSelector(cancelledOrders,function(o){return o;});// Filled Orders\nvar filledOrdersLoaded=function filledOrdersLoaded(state){return get(state,'exchange.filledOrders.loaded',false);};export var filledOrdersLoadedSelector=createSelector(filledOrdersLoaded,function(loaded){return loaded;});var filledOrders=function filledOrders(state){return get(state,'exchange.filledOrders.data',[]);};export var filledOrdersSelector=createSelector(filledOrders,function(orders){// Sort orders by date ascending for price comparison\norders=orders.sort(function(a,b){return a.timestamp-b.timestamp;});// Decorate the orders\norders=decorateFilledOrders(orders);// Sort orders by date descending for display\norders=orders.sort(function(a,b){return b.timestamp-a.timestamp;});return orders;});var decorateFilledOrders=function decorateFilledOrders(orders){// Track previous order to compare history\nvar previousOrder=orders[0];return orders.map(function(order){order=decorateOrder(order);order=decorateFilledOrder(order,previousOrder);previousOrder=order;// Update the previous order once it's decorated\nreturn order;});};var decorateOrder=function decorateOrder(order){var etherAmount;var tokenAmount;if(order.tokenGive===ETHER_ADDRESS){etherAmount=order.amountGive;tokenAmount=order.amountGet;}else{etherAmount=order.amountGet;tokenAmount=order.amountGive;}// Calculate token price to 5 decimal places\nvar precision=100000;var tokenPrice=etherAmount/tokenAmount;tokenPrice=Math.round(tokenPrice*precision)/precision;return _objectSpread(_objectSpread({},order),{},{etherAmount:ether(etherAmount),tokenAmount:tokens(tokenAmount),tokenPrice:tokenPrice,formattedTimestamp:moment.unix(order.timestamp).format('h:mm:ss a M/D')});};var decorateFilledOrder=function decorateFilledOrder(order,previousOrder){return _objectSpread(_objectSpread({},order),{},{tokenPriceClass:tokenPriceClass(order.tokenPrice,order.id,previousOrder)});};var tokenPriceClass=function tokenPriceClass(tokenPrice,orderId,previousOrder){// Show green price if only one order exists\nif(previousOrder.id===orderId){return GREEN;}// Show green price if order price higher than previous order\n// Show red price if order price lower than previous order\nif(previousOrder.tokenPrice<=tokenPrice){return GREEN;// success\n}else{return RED;// danger\n}};var openOrders=function openOrders(state){var all=allOrders(state);var filled=filledOrders(state);var cancelled=cancelledOrders(state);var openOrders=reject(all,function(order){var orderFilled=filled.some(function(o){return o.id===order.id;});var orderCancelled=cancelled.some(function(o){return o.id===order.id;});return orderFilled||orderCancelled;});return openOrders;};var orderBookLoaded=function orderBookLoaded(state){return cancelledOrdersLoaded(state)&&filledOrdersLoaded(state)&&allOrdersLoaded(state);};export var orderBookLoadedSelector=createSelector(orderBookLoaded,function(loaded){return loaded;});// Create the order book\nexport var orderBookSelector=createSelector(openOrders,function(orders){// Decorate orders\norders=decorateOrderBookOrders(orders);// Group orders by \"orderType\"\norders=groupBy(orders,'orderType');// Fetch buy orders\nvar buyOrders=get(orders,'buy',[]);// Sort buy orders by token price\norders=_objectSpread(_objectSpread({},orders),{},{buyOrders:buyOrders.sort(function(a,b){return b.tokenPrice-a.tokenPrice;})});// Fetch sell orders\nvar sellOrders=get(orders,'sell',[]);// Sort sell orders by token price\norders=_objectSpread(_objectSpread({},orders),{},{sellOrders:sellOrders.sort(function(a,b){return b.tokenPrice-a.tokenPrice;})});return orders;});var decorateOrderBookOrders=function decorateOrderBookOrders(orders){return orders.map(function(order){order=decorateOrder(order);order=decorateOrderBookOrder(order);return order;});};var decorateOrderBookOrder=function decorateOrderBookOrder(order){var orderType=order.tokenGive===ETHER_ADDRESS?'buy':'sell';return _objectSpread(_objectSpread({},order),{},{orderType:orderType,orderTypeClass:orderType==='buy'?GREEN:RED,orderFillAction:orderType==='buy'?'sell':'buy'});};export var myFilledOrdersLoadedSelector=createSelector(filledOrdersLoaded,function(loaded){return loaded;});export var myFilledOrdersSelector=createSelector(account,filledOrders,function(account,orders){// Find our orders\norders=orders.filter(function(o){return o.user===account||o.userFill===account;});// Sort by date ascending\norders=orders.sort(function(a,b){return a.timestamp-b.timestamp;});// Decorate orders - add display attributes\norders=decorateMyFilledOrders(orders,account);return orders;});var decorateMyFilledOrders=function decorateMyFilledOrders(orders,account){return orders.map(function(order){order=decorateOrder(order);order=decorateMyFilledOrder(order,account);return order;});};var decorateMyFilledOrder=function decorateMyFilledOrder(order,account){var myOrder=order.user===account;var orderType;if(myOrder){orderType=order.tokenGive===ETHER_ADDRESS?'buy':'sell';}else{orderType=order.tokenGive===ETHER_ADDRESS?'sell':'buy';}return _objectSpread(_objectSpread({},order),{},{orderType:orderType,orderTypeClass:orderType==='buy'?GREEN:RED,orderSign:orderType==='buy'?'+':'-'});};export var myOpenOrdersLoadedSelector=createSelector(orderBookLoaded,function(loaded){return loaded;});export var myOpenOrdersSelector=createSelector(account,openOrders,function(account,orders){// Filter orders created by current account\norders=orders.filter(function(o){return o.user===account;});// Decorate orders - add display attributes\norders=decorateMyOpenOrders(orders);// Sort orders by date descending\norders=orders.sort(function(a,b){return b.timestamp-a.timestamp;});return orders;});var decorateMyOpenOrders=function decorateMyOpenOrders(orders,account){return orders.map(function(order){order=decorateOrder(order);order=decorateMyOpenOrder(order,account);return order;});};var decorateMyOpenOrder=function decorateMyOpenOrder(order,account){var orderType=order.tokenGive===ETHER_ADDRESS?'buy':'sell';return _objectSpread(_objectSpread({},order),{},{orderType:orderType,orderTypeClass:orderType==='buy'?GREEN:RED});};export var priceChartLoadedSelector=createSelector(filledOrdersLoaded,function(loaded){return loaded;});export var priceChartSelector=createSelector(filledOrders,function(orders){// Sort orders by date ascending to compare history\norders=orders.sort(function(a,b){return a.timestamp-b.timestamp;});// Decorate orders - add display attributes\norders=orders.map(function(o){return decorateOrder(o);});// Get last 2 order for final price & price change\nvar secondLastOrder,lastOrder;var _orders$slice=orders.slice(orders.length-2,orders.length);var _orders$slice2=_slicedToArray(_orders$slice,2);secondLastOrder=_orders$slice2[0];lastOrder=_orders$slice2[1];// get last order price\nvar lastPrice=get(lastOrder,'tokenPrice',0);// get second last order price\nvar secondLastPrice=get(secondLastOrder,'tokenPrice',0);return{lastPrice:lastPrice,lastPriceChange:lastPrice>=secondLastPrice?'+':'-',series:[{data:buildGraphData(orders)}]};});var buildGraphData=function buildGraphData(orders){// Group the orders by hour for the graph\norders=groupBy(orders,function(o){return moment.unix(o.timestamp).startOf('hour').format();});// Get each hour where data exists\nvar hours=Object.keys(orders);// Build the graph series\nvar graphData=hours.map(function(hour){// Fetch all the orders from current hour\nvar group=orders[hour];// Calculate price values - open, high, low, close\nvar open=group[0];// first order\nvar high=maxBy(group,'tokenPrice');// high price\nvar low=minBy(group,'tokenPrice');// low price\nvar close=group[group.length-1];// last order\nreturn{x:new Date(hour),y:[open.tokenPrice,high.tokenPrice,low.tokenPrice,close.tokenPrice]};});return graphData;};var orderCancelling=function orderCancelling(state){return get(state,'exchange.orderCancelling',false);};export var orderCancellingSelector=createSelector(orderCancelling,function(status){return status;});var orderFilling=function orderFilling(state){return get(state,'exchange.orderFilling',false);};export var orderFillingSelector=createSelector(orderFilling,function(status){return status;});var balancesLoading=function balancesLoading(state){return get(state,'exchange.balancesLoading',true);};export var balancesLoadingSelector=createSelector(balancesLoading,function(status){return status;});var etherBalance=function etherBalance(state){return get(state,'web3.balance',0);};export var etherBalanceSelector=createSelector(etherBalance,function(balance){return formatBalance(balance);});var tokenBalance=function tokenBalance(state){return get(state,'token.balance',0);};export var tokenBalanceSelector=createSelector(tokenBalance,function(balance){return formatBalance(balance);});var exchangeEtherBalance=function exchangeEtherBalance(state){return get(state,'exchange.etherBalance',0);};export var exchangeEtherBalanceSelector=createSelector(exchangeEtherBalance,function(balance){return formatBalance(balance);});var exchangeTokenBalance=function exchangeTokenBalance(state){return get(state,'exchange.tokenBalance',0);};export var exchangeTokenBalanceSelector=createSelector(exchangeTokenBalance,function(balance){return formatBalance(balance);});var etherDepositAmount=function etherDepositAmount(state){return get(state,'exchange.etherDepositAmount',null);};export var etherDepositAmountSelector=createSelector(etherDepositAmount,function(amount){return amount;});var etherWithdrawAmount=function etherWithdrawAmount(state){return get(state,'exchange.etherWithdrawAmount',null);};export var etherWithdrawAmountSelector=createSelector(etherWithdrawAmount,function(amount){return amount;});var tokenDepositAmount=function tokenDepositAmount(state){return get(state,'exchange.tokenDepositAmount',null);};export var tokenDepositAmountSelector=createSelector(tokenDepositAmount,function(amount){return amount;});var tokenWithdrawAmount=function tokenWithdrawAmount(state){return get(state,'exchange.tokenWithdrawAmount',null);};export var tokenWithdrawAmountSelector=createSelector(tokenWithdrawAmount,function(amount){return amount;});var buyOrder=function buyOrder(state){return get(state,'exchange.buyOrder',{});};export var buyOrderSelector=createSelector(buyOrder,function(order){return order;});var sellOrder=function sellOrder(state){return get(state,'exchange.sellOrder',{});};export var sellOrderSelector=createSelector(sellOrder,function(order){return order;});","map":{"version":3,"sources":["/Users/raymondburgess/Dapps/blockchain-developer-bootcamp-v2/src/store/selectors.js"],"names":["get","groupBy","reject","maxBy","minBy","createSelector","moment","ETHER_ADDRESS","GREEN","RED","tokens","ether","formatBalance","account","state","accountSelector","a","web3","web3Selector","w","tokenLoaded","tokenLoadedSelector","tl","token","tokenSelector","t","exchangeLoaded","exchangeLoadedSelector","el","exchange","exchangeSelector","e","contractsLoadedSelector","allOrdersLoaded","allOrders","cancelledOrdersLoaded","cancelledOrdersLoadedSelector","loaded","cancelledOrders","cancelledOrdersSelector","o","filledOrdersLoaded","filledOrdersLoadedSelector","filledOrders","filledOrdersSelector","orders","sort","b","timestamp","decorateFilledOrders","previousOrder","map","order","decorateOrder","decorateFilledOrder","etherAmount","tokenAmount","tokenGive","amountGive","amountGet","precision","tokenPrice","Math","round","formattedTimestamp","unix","format","tokenPriceClass","id","orderId","openOrders","all","filled","cancelled","orderFilled","some","orderCancelled","orderBookLoaded","orderBookLoadedSelector","orderBookSelector","decorateOrderBookOrders","buyOrders","sellOrders","decorateOrderBookOrder","orderType","orderTypeClass","orderFillAction","myFilledOrdersLoadedSelector","myFilledOrdersSelector","filter","user","userFill","decorateMyFilledOrders","decorateMyFilledOrder","myOrder","orderSign","myOpenOrdersLoadedSelector","myOpenOrdersSelector","decorateMyOpenOrders","decorateMyOpenOrder","priceChartLoadedSelector","priceChartSelector","secondLastOrder","lastOrder","slice","length","lastPrice","secondLastPrice","lastPriceChange","series","data","buildGraphData","startOf","hours","Object","keys","graphData","hour","group","open","high","low","close","x","Date","y","orderCancelling","orderCancellingSelector","status","orderFilling","orderFillingSelector","balancesLoading","balancesLoadingSelector","etherBalance","etherBalanceSelector","balance","tokenBalance","tokenBalanceSelector","exchangeEtherBalance","exchangeEtherBalanceSelector","exchangeTokenBalance","exchangeTokenBalanceSelector","etherDepositAmount","etherDepositAmountSelector","amount","etherWithdrawAmount","etherWithdrawAmountSelector","tokenDepositAmount","tokenDepositAmountSelector","tokenWithdrawAmount","tokenWithdrawAmountSelector","buyOrder","buyOrderSelector","sellOrder","sellOrderSelector"],"mappings":"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","sourcesContent":["import { get, groupBy, reject, maxBy, minBy } from 'lodash'\nimport { createSelector } from 'reselect'\nimport moment from 'moment'\nimport { ETHER_ADDRESS, GREEN, RED, tokens, ether, formatBalance } from '../helpers'\n\nconst account = state => get(state, 'web3.account')\nexport const accountSelector = createSelector(account, a => a)\n\nconst web3 = state => get(state, 'web3.connection')\nexport const web3Selector = createSelector(web3, w => w)\n\nconst tokenLoaded = state => get(state, 'token.loaded', false)\nexport const tokenLoadedSelector = createSelector(tokenLoaded, tl => tl)\n\nconst token = state => get(state, 'token.connection')\nexport const tokenSelector = createSelector(token, t => t)\n\nconst exchangeLoaded = state => get(state, 'exchange.loaded', false)\nexport const exchangeLoadedSelector = createSelector(exchangeLoaded, el => el)\n\nconst exchange = state => get(state, 'exchange.connection')\nexport const exchangeSelector = createSelector(exchange, e => e)\n\nexport const contractsLoadedSelector = createSelector(\n  tokenLoaded,\n  exchangeLoaded,\n  (tl, el) => (tl && el)\n)\n\n// All Orders\nconst allOrdersLoaded = state => get(state, 'exchange.allOrders.loaded', false)\nconst allOrders = state => get(state, 'exchange.allOrders.data', [])\n\n// Cancelled orders\nconst cancelledOrdersLoaded = state => get(state, 'exchange.cancelledOrders.loaded', false)\nexport const cancelledOrdersLoadedSelector = createSelector(cancelledOrdersLoaded, loaded => loaded)\n\nconst cancelledOrders = state => get(state, 'exchange.cancelledOrders.data', [])\nexport const cancelledOrdersSelector = createSelector(cancelledOrders, o => o)\n\n// Filled Orders\nconst filledOrdersLoaded = state => get(state, 'exchange.filledOrders.loaded', false)\nexport const filledOrdersLoadedSelector = createSelector(filledOrdersLoaded, loaded => loaded)\n\nconst filledOrders = state => get(state, 'exchange.filledOrders.data', [])\nexport const filledOrdersSelector = createSelector(\n  filledOrders,\n  (orders) => {\n    // Sort orders by date ascending for price comparison\n    orders = orders.sort((a,b) => a.timestamp - b.timestamp)\n    // Decorate the orders\n    orders = decorateFilledOrders(orders)\n    // Sort orders by date descending for display\n    orders = orders.sort((a,b) => b.timestamp - a.timestamp)\n    return orders\n  }\n)\n\nconst decorateFilledOrders = (orders) => {\n  // Track previous order to compare history\n  let previousOrder = orders[0]\n  return(\n    orders.map((order) => {\n      order = decorateOrder(order)\n      order = decorateFilledOrder(order, previousOrder)\n      previousOrder = order // Update the previous order once it's decorated\n      return order\n    })\n  )\n}\n\nconst decorateOrder = (order) => {\n  let etherAmount\n  let tokenAmount\n\n  if(order.tokenGive === ETHER_ADDRESS) {\n    etherAmount = order.amountGive\n    tokenAmount = order.amountGet\n  } else {\n    etherAmount = order.amountGet\n    tokenAmount = order.amountGive\n  }\n\n  // Calculate token price to 5 decimal places\n  const precision = 100000\n  let tokenPrice = (etherAmount / tokenAmount)\n  tokenPrice = Math.round(tokenPrice * precision) / precision\n\n  return({\n    ...order,\n    etherAmount: ether(etherAmount),\n    tokenAmount: tokens(tokenAmount),\n    tokenPrice,\n    formattedTimestamp: moment.unix(order.timestamp).format('h:mm:ss a M/D')\n  })\n}\n\nconst decorateFilledOrder = (order, previousOrder) => {\n  return({\n    ...order,\n    tokenPriceClass: tokenPriceClass(order.tokenPrice, order.id, previousOrder)\n  })\n}\n\nconst tokenPriceClass = (tokenPrice, orderId, previousOrder) => {\n  // Show green price if only one order exists\n  if(previousOrder.id === orderId) {\n    return GREEN\n  }\n\n  // Show green price if order price higher than previous order\n  // Show red price if order price lower than previous order\n  if(previousOrder.tokenPrice <= tokenPrice) {\n    return GREEN // success\n  } else {\n    return RED // danger\n  }\n}\n\nconst openOrders = state => {\n  const all = allOrders(state)\n  const filled = filledOrders(state)\n  const cancelled = cancelledOrders(state)\n\n  const openOrders = reject(all, (order) => {\n    const orderFilled = filled.some((o) => o.id === order.id)\n    const orderCancelled = cancelled.some((o) => o.id === order.id)\n    return(orderFilled || orderCancelled)\n  })\n\n  return openOrders\n}\n\n\nconst orderBookLoaded = state => cancelledOrdersLoaded(state) && filledOrdersLoaded(state) && allOrdersLoaded(state)\nexport const orderBookLoadedSelector = createSelector(orderBookLoaded, loaded => loaded)\n\n// Create the order book\nexport const orderBookSelector = createSelector(\n  openOrders,\n  (orders) => {\n    // Decorate orders\n    orders = decorateOrderBookOrders(orders)\n    // Group orders by \"orderType\"\n    orders = groupBy(orders, 'orderType')\n    // Fetch buy orders\n    const buyOrders = get(orders, 'buy', [])\n    // Sort buy orders by token price\n    orders = {\n      ...orders,\n      buyOrders: buyOrders.sort((a,b) => b.tokenPrice - a.tokenPrice)\n    }\n    // Fetch sell orders\n    const sellOrders = get(orders, 'sell', [])\n    // Sort sell orders by token price\n    orders = {\n      ...orders,\n      sellOrders: sellOrders.sort((a,b) => b.tokenPrice - a.tokenPrice)\n    }\n    return orders\n  }\n)\n\nconst decorateOrderBookOrders = (orders) => {\n  return(\n    orders.map((order) => {\n      order = decorateOrder(order)\n      order = decorateOrderBookOrder(order)\n      return(order)\n    })\n  )\n}\n\nconst decorateOrderBookOrder = (order) => {\n  const orderType = order.tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\n  return({\n    ...order,\n    orderType,\n    orderTypeClass: (orderType === 'buy' ? GREEN : RED),\n    orderFillAction: orderType === 'buy' ? 'sell' : 'buy'\n  })\n}\n\nexport const myFilledOrdersLoadedSelector = createSelector(filledOrdersLoaded, loaded => loaded)\n\nexport const myFilledOrdersSelector = createSelector(\n  account,\n  filledOrders,\n  (account, orders) => {\n    // Find our orders\n    orders = orders.filter((o) => o.user === account || o.userFill === account)\n    // Sort by date ascending\n    orders = orders.sort((a,b) => a.timestamp - b.timestamp)\n    // Decorate orders - add display attributes\n    orders = decorateMyFilledOrders(orders, account)\n    return orders\n  }\n)\n\nconst decorateMyFilledOrders = (orders, account) => {\n  return(\n    orders.map((order) => {\n      order = decorateOrder(order)\n      order = decorateMyFilledOrder(order, account)\n      return(order)\n    })\n  )\n}\n\nconst decorateMyFilledOrder = (order, account) => {\n  const myOrder = order.user === account\n\n  let orderType\n  if(myOrder) {\n    orderType = order.tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\n  } else {\n    orderType = order.tokenGive === ETHER_ADDRESS ? 'sell' : 'buy'\n  }\n\n  return({\n    ...order,\n    orderType,\n    orderTypeClass: (orderType === 'buy' ? GREEN : RED),\n    orderSign: (orderType === 'buy' ? '+' : '-')\n  })\n}\n\nexport const myOpenOrdersLoadedSelector = createSelector(orderBookLoaded, loaded => loaded)\n\nexport const myOpenOrdersSelector = createSelector(\n  account,\n  openOrders,\n  (account, orders) => {\n    // Filter orders created by current account\n    orders = orders.filter((o) => o.user === account)\n    // Decorate orders - add display attributes\n    orders = decorateMyOpenOrders(orders)\n    // Sort orders by date descending\n    orders = orders.sort((a,b) => b.timestamp - a.timestamp)\n    return orders\n  }\n)\n\nconst decorateMyOpenOrders = (orders, account) => {\n  return(\n    orders.map((order) => {\n      order = decorateOrder(order)\n      order = decorateMyOpenOrder(order, account)\n      return(order)\n    })\n  )\n}\n\nconst decorateMyOpenOrder = (order, account) => {\n  let orderType = order.tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\n\n  return({\n    ...order,\n    orderType,\n    orderTypeClass: (orderType === 'buy' ? GREEN : RED)\n  })\n}\n\nexport const priceChartLoadedSelector = createSelector(filledOrdersLoaded, loaded => loaded)\n\nexport const priceChartSelector = createSelector(\n  filledOrders,\n  (orders) => {\n    // Sort orders by date ascending to compare history\n    orders = orders.sort((a,b) => a.timestamp - b.timestamp)\n    // Decorate orders - add display attributes\n    orders = orders.map((o) => decorateOrder(o))\n    // Get last 2 order for final price & price change\n    let secondLastOrder, lastOrder\n    [secondLastOrder, lastOrder] = orders.slice(orders.length - 2, orders.length)\n    // get last order price\n    const lastPrice = get(lastOrder, 'tokenPrice', 0)\n    // get second last order price\n    const secondLastPrice = get(secondLastOrder, 'tokenPrice', 0)\n\n    return({\n      lastPrice,\n      lastPriceChange: (lastPrice >= secondLastPrice ? '+' : '-'),\n      series: [{\n        data: buildGraphData(orders)\n      }]\n    })\n  }\n)\n\nconst buildGraphData = (orders) => {\n  // Group the orders by hour for the graph\n  orders = groupBy(orders, (o) => moment.unix(o.timestamp).startOf('hour').format())\n  // Get each hour where data exists\n  const hours = Object.keys(orders)\n  // Build the graph series\n  const graphData = hours.map((hour) => {\n    // Fetch all the orders from current hour\n    const group = orders[hour]\n    // Calculate price values - open, high, low, close\n    const open = group[0] // first order\n    const high = maxBy(group, 'tokenPrice') // high price\n    const low = minBy(group, 'tokenPrice') // low price\n    const close = group[group.length - 1] // last order\n\n    return({\n      x: new Date(hour),\n      y: [open.tokenPrice, high.tokenPrice, low.tokenPrice, close.tokenPrice]\n    })\n  })\n\n  return graphData\n}\n\nconst orderCancelling = state => get(state, 'exchange.orderCancelling', false)\nexport const orderCancellingSelector = createSelector(orderCancelling, status => status)\n\nconst orderFilling = state => get(state, 'exchange.orderFilling', false)\nexport const orderFillingSelector = createSelector(orderFilling, status => status)\n\nconst balancesLoading = state => get(state, 'exchange.balancesLoading', true)\nexport const balancesLoadingSelector = createSelector(balancesLoading, status => status)\n\nconst etherBalance = state => get(state, 'web3.balance', 0)\nexport const etherBalanceSelector = createSelector(\n  etherBalance,\n  (balance) => {\n    return formatBalance(balance)\n  }\n)\n\nconst tokenBalance = state => get(state, 'token.balance', 0)\nexport const tokenBalanceSelector = createSelector(\n  tokenBalance,\n  (balance) => {\n    return formatBalance(balance)\n  }\n)\n\nconst exchangeEtherBalance = state => get(state, 'exchange.etherBalance', 0)\nexport const exchangeEtherBalanceSelector = createSelector(\n  exchangeEtherBalance,\n  (balance) => {\n    return formatBalance(balance)\n  }\n)\n\nconst exchangeTokenBalance = state => get(state, 'exchange.tokenBalance', 0)\nexport const exchangeTokenBalanceSelector = createSelector(\n  exchangeTokenBalance,\n  (balance) => {\n    return formatBalance(balance)\n  }\n)\n\nconst etherDepositAmount = state => get(state, 'exchange.etherDepositAmount', null)\nexport const etherDepositAmountSelector = createSelector(etherDepositAmount, amount => amount)\n\nconst etherWithdrawAmount = state => get(state, 'exchange.etherWithdrawAmount', null)\nexport const etherWithdrawAmountSelector = createSelector(etherWithdrawAmount, amount => amount)\n\nconst tokenDepositAmount = state => get(state, 'exchange.tokenDepositAmount', null)\nexport const tokenDepositAmountSelector = createSelector(tokenDepositAmount, amount => amount)\n\nconst tokenWithdrawAmount = state => get(state, 'exchange.tokenWithdrawAmount', null)\nexport const tokenWithdrawAmountSelector = createSelector(tokenWithdrawAmount, amount => amount)\n\nconst buyOrder = state => get(state, 'exchange.buyOrder', {})\nexport const buyOrderSelector = createSelector(buyOrder, order => order)\n\nconst sellOrder = state => get(state, 'exchange.sellOrder', {})\nexport const sellOrderSelector = createSelector(sellOrder, order => order)\n\n"]},"metadata":{},"sourceType":"module"}