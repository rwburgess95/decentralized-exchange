{"ast":null,"code":"export var ETHER_ADDRESS = '0x0000000000000000000000000000000000000000';\nexport var GREEN = 'success';\nexport var RED = 'danger';\nexport var DECIMALS = Math.pow(10, 18); // Shortcut to avoid passing around web3 connection\n\nexport var ether = function ether(wei) {\n  if (wei) {\n    return wei / DECIMALS; // 18 decimal places\n  }\n}; // Tokens and ether havesame decimal resolution\n\nexport var tokens = ether;\nexport var formatBalance = function formatBalance(balance) {\n  var precision = 100; // 2 decimal places\n\n  balance = ether(balance);\n  balance = Math.round(balance * precision) / precision; // Use 2 decimal places\n\n  return balance;\n};","map":{"version":3,"sources":["/Users/raymondburgess/Dapps/blockchain-developer-bootcamp-v2/src/helpers.js"],"names":["ETHER_ADDRESS","GREEN","RED","DECIMALS","ether","wei","tokens","formatBalance","balance","precision","Math","round"],"mappings":"AAAA,OAAO,IAAMA,aAAa,GAAG,4CAAtB;AACP,OAAO,IAAMC,KAAK,GAAG,SAAd;AACP,OAAO,IAAMC,GAAG,GAAG,QAAZ;AAEP,OAAO,IAAMC,QAAQ,YAAI,EAAJ,EAAQ,EAAR,CAAd,C,CAEP;;AACA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,GAAD,EAAS;AAC5B,MAAGA,GAAH,EAAQ;AACN,WAAOA,GAAG,GAAGF,QAAb,CADM,CACiB;AACxB;AACF,CAJM,C,CAMP;;AACA,OAAO,IAAMG,MAAM,GAAGF,KAAf;AAEP,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAACC,OAAD,EAAa;AACxC,MAAMC,SAAS,GAAG,GAAlB,CADwC,CAClB;;AAEtBD,EAAAA,OAAO,GAAGJ,KAAK,CAACI,OAAD,CAAf;AACAA,EAAAA,OAAO,GAAGE,IAAI,CAACC,KAAL,CAAWH,OAAO,GAAGC,SAArB,IAAkCA,SAA5C,CAJwC,CAIc;;AAEtD,SAAOD,OAAP;AACD,CAPM","sourcesContent":["export const ETHER_ADDRESS = '0x0000000000000000000000000000000000000000'\nexport const GREEN = 'success'\nexport const RED = 'danger'\n\nexport const DECIMALS = (10**18)\n\n// Shortcut to avoid passing around web3 connection\nexport const ether = (wei) => {\n  if(wei) {\n    return(wei / DECIMALS) // 18 decimal places\n  }\n}\n\n// Tokens and ether havesame decimal resolution\nexport const tokens = ether\n\nexport const formatBalance = (balance) => {\n  const precision = 100 // 2 decimal places\n\n  balance = ether(balance)\n  balance = Math.round(balance * precision) / precision // Use 2 decimal places\n\n  return balance\n}"]},"metadata":{},"sourceType":"module"}