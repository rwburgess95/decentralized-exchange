{"ast":null,"code":"import _toConsumableArray from \"/Users/raymondburgess/Dapps/blockchain-developer-bootcamp-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/raymondburgess/Dapps/blockchain-developer-bootcamp-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { combineReducers } from 'redux';\n\nfunction web3() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'WEB3_LOADED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        connection: action.connection\n      });\n\n    case 'WEB3_ACCOUNT_LOADED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        account: action.account\n      });\n\n    case 'ETHER_BALANCE_LOADED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        balance: action.balance\n      });\n\n    default:\n      return state;\n  }\n}\n\nfunction token() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'TOKEN_LOADED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loaded: true,\n        connection: action.contract\n      });\n\n    case 'TOKEN_BALANCE_LOADED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        balance: action.balance\n      });\n\n    default:\n      return state;\n  }\n}\n\nfunction exchange() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var index, data;\n\n  switch (action.type) {\n    case 'EXCHANGE_LOADED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loaded: true,\n        connection: action.contract\n      });\n\n    case 'CANCELLED_ORDERS_LOADED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cancelledOrders: {\n          loaded: true,\n          data: action.cancelledOrders\n        }\n      });\n\n    case 'FILLED_ORDERS_LOADED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filledOrders: {\n          loaded: true,\n          data: action.filledOrders\n        }\n      });\n\n    case 'ALL_ORDERS_LOADED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        allOrders: {\n          loaded: true,\n          data: action.allOrders\n        }\n      });\n\n    case 'ORDER_CANCELLING':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        orderCancelling: true\n      });\n\n    case 'ORDER_CANCELLED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        orderCancelling: false,\n        cancelledOrders: _objectSpread(_objectSpread({}, state.cancelledOrders), {}, {\n          data: [].concat(_toConsumableArray(state.cancelledOrders.data), [action.order])\n        })\n      });\n\n    case 'ORDER_FILLED':\n      // Prevent duplicate orders\n      index = state.filledOrders.data.findIndex(function (order) {\n        return order.id === action.order.id;\n      });\n\n      if (index === -1) {\n        data = [].concat(_toConsumableArray(state.filledOrders.data), [action.order]);\n      } else {\n        data = state.filledOrders.data;\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        orderFilling: false,\n        filledOrders: _objectSpread(_objectSpread({}, state.filledOrders), {}, {\n          data: data\n        })\n      });\n\n    case 'ORDER_FILLING':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        orderFilling: true\n      });\n\n    case 'EXCHANGE_ETHER_BALANCE_LOADED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        etherBalance: action.balance\n      });\n\n    case 'EXCHANGE_TOKEN_BALANCE_LOADED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tokenBalance: action.balance\n      });\n\n    case 'BALANCES_LOADING':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        balancesLoading: true\n      });\n\n    case 'BALANCES_LOADED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        balancesLoading: false\n      });\n\n    case 'ETHER_DEPOSIT_AMOUNT_CHANGED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        etherDepositAmount: action.amount\n      });\n\n    case 'ETHER_WITHDRAW_AMOUNT_CHANGED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        etherWithdrawAmount: action.amount\n      });\n\n    case 'TOKEN_DEPOSIT_AMOUNT_CHANGED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tokenDepositAmount: action.amount\n      });\n\n    case 'TOKEN_WITHDRAW_AMOUNT_CHANGED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tokenWithdrawAmount: action.amount\n      });\n\n    default:\n      return state;\n  }\n}\n\nvar rootReducer = combineReducers({\n  web3: web3,\n  token: token,\n  exchange: exchange\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/raymondburgess/Dapps/blockchain-developer-bootcamp-v2/src/store/reducers.js"],"names":["combineReducers","web3","state","action","type","connection","account","balance","token","loaded","contract","exchange","index","data","cancelledOrders","filledOrders","allOrders","orderCancelling","order","findIndex","id","orderFilling","etherBalance","tokenBalance","balancesLoading","etherDepositAmount","amount","etherWithdrawAmount","tokenDepositAmount","tokenWithdrawAmount","rootReducer"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\n\nfunction web3(state = {}, action) {\n  switch (action.type) {\n  \tcase 'WEB3_LOADED':\n  \t\treturn { ...state, connection: action.connection} \n  \tcase 'WEB3_ACCOUNT_LOADED':\n  \t\treturn { ...state, account: action.account }\n    case 'ETHER_BALANCE_LOADED':\n      return { ...state, balance: action.balance }\n    default:\n      return state\n  }\n}\n\nfunction token(state = {}, action) {\n  switch (action.type) {\n  \tcase 'TOKEN_LOADED':\n  \t\treturn { ...state, loaded: true, connection: action.contract}\n    case 'TOKEN_BALANCE_LOADED':\n      return { ...state, balance: action.balance } \n    default:\n      return state\n  }\n}\n\nfunction exchange(state = {}, action) {\n  let index, data\n  switch (action.type) {\n  \tcase 'EXCHANGE_LOADED':\n  \t\treturn { ...state, loaded: true, connection: action.contract}\n  \tcase 'CANCELLED_ORDERS_LOADED':\n      return { ...state, cancelledOrders: { loaded: true, data: action.cancelledOrders } }\n    case 'FILLED_ORDERS_LOADED':\n      return { ...state, filledOrders: { loaded: true, data: action.filledOrders } }\n    case 'ALL_ORDERS_LOADED':\n      return { ...state, allOrders: { loaded: true, data: action.allOrders } }\n    case 'ORDER_CANCELLING':\n      return {...state, orderCancelling: true }\n    case 'ORDER_CANCELLED':\n      return {\n              ...state,\n              orderCancelling: false,\n              cancelledOrders: {\n                ...state.cancelledOrders,\n                data: [\n                  ...state.cancelledOrders.data,\n                  action.order\n                ]\n              }\n            }\n    case 'ORDER_FILLED':\n      // Prevent duplicate orders\n      index = state.filledOrders.data.findIndex(order => order.id === action.order.id);\n\n      if(index === -1) {\n        data = [...state.filledOrders.data, action.order]\n      } else {\n        data = state.filledOrders.data\n      }\n\n      return {\n        ...state,\n        orderFilling: false,\n        filledOrders: {\n          ...state.filledOrders,\n          data\n        }\n      }\n\n    case 'ORDER_FILLING':\n      return { ...state, orderFilling: true }\n    case 'EXCHANGE_ETHER_BALANCE_LOADED':\n      return { ...state, etherBalance: action.balance }\n    case 'EXCHANGE_TOKEN_BALANCE_LOADED':\n      return { ...state, tokenBalance: action.balance }\n    case 'BALANCES_LOADING':\n      return { ...state, balancesLoading: true }\n    case 'BALANCES_LOADED':\n      return { ...state, balancesLoading: false }\n    case 'ETHER_DEPOSIT_AMOUNT_CHANGED':\n      return { ...state, etherDepositAmount: action.amount }\n    case 'ETHER_WITHDRAW_AMOUNT_CHANGED':\n      return { ...state, etherWithdrawAmount: action.amount }\n    case 'TOKEN_DEPOSIT_AMOUNT_CHANGED':\n      return { ...state, tokenDepositAmount: action.amount }\n    case 'TOKEN_WITHDRAW_AMOUNT_CHANGED':\n      return { ...state, tokenWithdrawAmount: action.amount }\n    default:\n      return state\n  }\n}\n\nconst rootReducer = combineReducers({\n\tweb3,\n\ttoken,\n\texchange\n})\n\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}