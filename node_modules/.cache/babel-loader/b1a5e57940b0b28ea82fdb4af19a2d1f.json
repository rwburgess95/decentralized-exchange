{"ast":null,"code":"import _regeneratorRuntime from \"/Users/raymondburgess/Dapps/blockchain-developer-bootcamp-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/raymondburgess/Dapps/blockchain-developer-bootcamp-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Web3 from 'web3';\nimport { web3Loaded, web3AccountLoaded, tokenLoaded, exchangeLoaded, cancelledOrdersLoaded, filledOrdersLoaded, allOrdersLoaded, orderCancelling, orderCancelled, orderFilling, orderFilled, etherBalanceLoaded, tokenBalanceLoaded, exchangeEtherBalanceLoaded, exchangeTokenBalanceLoaded, balancesLoaded, balancesLoading, buyOrderMaking, sellOrderMaking, orderMade } from './actions';\nimport Token from '../abis/Token.json';\nimport Exchange from '../abis/Exchange.json';\nimport { ETHER_ADDRESS } from '../helpers';\nexport var loadWeb3 = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n    var web3;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(typeof window.ethereum !== 'undefined')) {\n              _context.next = 6;\n              break;\n            }\n\n            web3 = new Web3(window.ethereum);\n            dispatch(web3Loaded(web3));\n            return _context.abrupt(\"return\", web3);\n\n          case 6:\n            window.alert('Please install MetaMask');\n            window.location.assign(\"https://metamask.io/\");\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function loadWeb3(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var loadAccount = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(web3, dispatch) {\n    var accounts, account;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return web3.eth.requestAccounts();\n\n          case 2:\n            accounts = _context2.sent;\n            _context2.next = 5;\n            return accounts[0];\n\n          case 5:\n            account = _context2.sent;\n\n            if (!(typeof account !== 'undefined')) {\n              _context2.next = 11;\n              break;\n            }\n\n            dispatch(web3AccountLoaded(account));\n            return _context2.abrupt(\"return\", account);\n\n          case 11:\n            window.alert('Please login with MetaMask');\n            return _context2.abrupt(\"return\", null);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function loadAccount(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var loadToken = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(web3, networkId, dispatch) {\n    var token;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            token = new web3.eth.Contract(Token.abi, Token.networks[networkId].address);\n            dispatch(tokenLoaded(token));\n            return _context3.abrupt(\"return\", token);\n\n          case 6:\n            _context3.prev = 6;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log('Contract not deployed to the current network. Please select another network with Metamask.');\n            return _context3.abrupt(\"return\", null);\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 6]]);\n  }));\n\n  return function loadToken(_x4, _x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var loadExchange = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(web3, networkId, dispatch) {\n    var exchange;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            exchange = new web3.eth.Contract(Exchange.abi, Exchange.networks[networkId].address);\n            dispatch(exchangeLoaded(exchange));\n            return _context4.abrupt(\"return\", exchange);\n\n          case 6:\n            _context4.prev = 6;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.log('Contract not deployed to the current network. Please select another network with Metamask.');\n            return _context4.abrupt(\"return\", null);\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 6]]);\n  }));\n\n  return function loadExchange(_x7, _x8, _x9) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var loadAllOrders = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(exchange, dispatch) {\n    var cancelStream, cancelledOrders, tradeStream, filledOrders, orderStream, allOrders;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return exchange.getPastEvents('Cancel', {\n              fromBlock: 0,\n              toBlock: 'latest'\n            });\n\n          case 2:\n            cancelStream = _context5.sent;\n            // Format cancelled orders\n            cancelledOrders = cancelStream.map(function (event) {\n              return event.returnValues;\n            }); // Add cancelled orders to the redux store\n\n            dispatch(cancelledOrdersLoaded(cancelledOrders)); // Fetch filled orders with the \"Trade\" event stream\n\n            _context5.next = 7;\n            return exchange.getPastEvents('Trade', {\n              fromBlock: 0,\n              toBlock: 'latest'\n            });\n\n          case 7:\n            tradeStream = _context5.sent;\n            // Format filled orders\n            filledOrders = tradeStream.map(function (event) {\n              return event.returnValues;\n            }); // Add cancelled orders to the redux store\n\n            dispatch(filledOrdersLoaded(filledOrders)); // Load order stream\n\n            _context5.next = 12;\n            return exchange.getPastEvents('Order', {\n              fromBlock: 0,\n              toBlock: 'latest'\n            });\n\n          case 12:\n            orderStream = _context5.sent;\n            // Format order stream\n            allOrders = orderStream.map(function (event) {\n              return event.returnValues;\n            }); // Add open orders to the redux store\n\n            dispatch(allOrdersLoaded(allOrders));\n\n          case 15:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function loadAllOrders(_x10, _x11) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var cancelOrder = function cancelOrder(dispatch, exchange, order, account) {\n  exchange.methods.cancelOrder(order.id).send({\n    from: account\n  }).on('transactionHash', function (hash) {\n    dispatch(orderCancelling());\n  }).on('error', function (error) {\n    console.log(error);\n    window.alert('There was an error!');\n  });\n};\nexport var subscribeToEvents = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(exchange, dispatch) {\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            exchange.events.Cancel({}, function (error, event) {\n              dispatch(orderCancelled(event.returnValues));\n            });\n            exchange.events.Trade({}, function (error, event) {\n              dispatch(orderFilled(event.returnValues));\n            });\n            exchange.events.Deposit({}, function (error, event) {\n              dispatch(balancesLoaded());\n            });\n            exchange.events.Withdraw({}, function (error, event) {\n              dispatch(balancesLoaded());\n            });\n            exchange.events.Order({}, function (error, event) {\n              dispatch(orderMade(event.returnValues));\n            });\n\n          case 5:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function subscribeToEvents(_x12, _x13) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport var fillOrder = function fillOrder(dispatch, exchange, order, account) {\n  exchange.methods.fillOrder(order.id).send({\n    from: account\n  }).on('transactionHash', function (hash) {\n    dispatch(orderFilling());\n  }).on('error', function (error) {\n    console.log(error);\n    window.alert('There was an error!');\n  });\n};\nexport var loadBalances = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch, web3, exchange, token, account) {\n    var etherBalance, tokenBalance, exchangeEtherBalance, exchangeTokenBalance;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            if (!(typeof account !== 'undefined')) {\n              _context7.next = 20;\n              break;\n            }\n\n            _context7.next = 3;\n            return web3.eth.getBalance(account);\n\n          case 3:\n            etherBalance = _context7.sent;\n            dispatch(etherBalanceLoaded(etherBalance)); // Token balance in wallet\n\n            _context7.next = 7;\n            return token.methods.balanceOf(account).call();\n\n          case 7:\n            tokenBalance = _context7.sent;\n            dispatch(tokenBalanceLoaded(tokenBalance)); // Ether balance in exchange\n\n            _context7.next = 11;\n            return exchange.methods.balanceOf(ETHER_ADDRESS, account).call();\n\n          case 11:\n            exchangeEtherBalance = _context7.sent;\n            dispatch(exchangeEtherBalanceLoaded(exchangeEtherBalance)); // Token balance in exchange\n\n            _context7.next = 15;\n            return exchange.methods.balanceOf(token.options.address, account).call();\n\n          case 15:\n            exchangeTokenBalance = _context7.sent;\n            dispatch(exchangeTokenBalanceLoaded(exchangeTokenBalance)); // Trigger all balances loaded\n\n            dispatch(balancesLoaded());\n            _context7.next = 21;\n            break;\n\n          case 20:\n            window.alert('Please login with MetaMask');\n\n          case 21:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function loadBalances(_x14, _x15, _x16, _x17, _x18) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nexport var depositEther = function depositEther(dispatch, exchange, web3, amount, account) {\n  exchange.methods.depositEther().send({\n    from: account,\n    value: web3.utils.toWei(amount, 'ether')\n  }).on('transactionHash', function (hash) {\n    dispatch(balancesLoading());\n  }).on('error', function (error) {\n    console.error(error);\n    window.alert(\"There was an error!\");\n  });\n};\nexport var withdrawEther = function withdrawEther(dispatch, exchange, web3, amount, account) {\n  exchange.methods.withdrawEther(web3.utils.toWei(amount, 'ether')).send({\n    from: account\n  }).on('transactionHash', function (hash) {\n    dispatch(balancesLoading());\n  }).on('error', function (error) {\n    console.error(error);\n    window.alert(\"There was an error!\");\n  });\n};\nexport var depositToken = function depositToken(dispatch, exchange, web3, token, amount, account) {\n  amount = web3.utils.toWei(amount, 'ether');\n  token.methods.approve(exchange.options.address, amount).send({\n    from: account\n  }).on('transactionHash', function (hash) {\n    exchange.methods.depositToken(token.options.address, amount).send({\n      from: account\n    }).on('transactionHash', function (hash) {\n      dispatch(balancesLoading());\n    }).on('error', function (error) {\n      console.error(error);\n      window.alert(\"There was an error!\");\n    });\n  });\n};\nexport var withdrawToken = function withdrawToken(dispatch, exchange, web3, token, amount, account) {\n  exchange.methods.withdrawToken(token.options.address, web3.utils.toWei(amount, 'ether')).send({\n    from: account\n  }).on('transactionHash', function (hash) {\n    dispatch(balancesLoading());\n  }).on('error', function (error) {\n    console.error(error);\n    window.alert(\"There was an error!\");\n  });\n};\nexport var makeBuyOrder = function makeBuyOrder(dispatch, exchange, token, web3, order, account) {\n  var tokenGet = token.options.address;\n  var amountGet = web3.utils.toWei(order.amount, 'ether');\n  var tokenGive = ETHER_ADDRESS;\n  var amountGive = web3.utils.toWei((order.amount * order.price).toString(), 'ether');\n  exchange.methods.makeOrder(tokenGet, amountGet, tokenGive, amountGive).send({\n    from: account\n  }).on('transactionHash', function (hash) {\n    dispatch(buyOrderMaking());\n  }).on('error', function (error) {\n    console.error(error);\n    window.alert(\"There was an error!\");\n  });\n};\nexport var makeSellOrder = function makeSellOrder(dispatch, exchange, token, web3, order, account) {\n  var tokenGet = ETHER_ADDRESS;\n  var amountGet = web3.utils.toWei((order.amount * order.price).toString(), 'ether');\n  var tokenGive = token.options.address;\n  var amountGive = web3.utils.toWei(order.amount, 'ether');\n  exchange.methods.makeOrder(tokenGet, amountGet, tokenGive, amountGive).send({\n    from: account\n  }).on('transactionHash', function (hash) {\n    dispatch(sellOrderMaking());\n  }).on('error', function (error) {\n    console.error(error);\n    window.alert(\"There was an error!\");\n  });\n};","map":{"version":3,"sources":["/Users/raymondburgess/Dapps/blockchain-developer-bootcamp-v2/src/store/interactions.js"],"names":["Web3","web3Loaded","web3AccountLoaded","tokenLoaded","exchangeLoaded","cancelledOrdersLoaded","filledOrdersLoaded","allOrdersLoaded","orderCancelling","orderCancelled","orderFilling","orderFilled","etherBalanceLoaded","tokenBalanceLoaded","exchangeEtherBalanceLoaded","exchangeTokenBalanceLoaded","balancesLoaded","balancesLoading","buyOrderMaking","sellOrderMaking","orderMade","Token","Exchange","ETHER_ADDRESS","loadWeb3","dispatch","window","ethereum","web3","alert","location","assign","loadAccount","eth","requestAccounts","accounts","account","loadToken","networkId","token","Contract","abi","networks","address","console","log","loadExchange","exchange","loadAllOrders","getPastEvents","fromBlock","toBlock","cancelStream","cancelledOrders","map","event","returnValues","tradeStream","filledOrders","orderStream","allOrders","cancelOrder","order","methods","id","send","from","on","hash","error","subscribeToEvents","events","Cancel","Trade","Deposit","Withdraw","Order","fillOrder","loadBalances","getBalance","etherBalance","balanceOf","call","tokenBalance","exchangeEtherBalance","options","exchangeTokenBalance","depositEther","amount","value","utils","toWei","withdrawEther","depositToken","approve","withdrawToken","makeBuyOrder","tokenGet","amountGet","tokenGive","amountGive","price","toString","makeOrder","makeSellOrder"],"mappings":"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","sourcesContent":["import Web3 from 'web3'\n\nimport {\n  web3Loaded,\n  web3AccountLoaded,\n  tokenLoaded,\n  exchangeLoaded,\n  cancelledOrdersLoaded,\n  filledOrdersLoaded,\n  allOrdersLoaded,\n  orderCancelling,\n  orderCancelled,\n  orderFilling,\n  orderFilled,\n  etherBalanceLoaded,\n  tokenBalanceLoaded,\n  exchangeEtherBalanceLoaded,\n  exchangeTokenBalanceLoaded,\n  balancesLoaded,\n  balancesLoading,\n  buyOrderMaking,\n  sellOrderMaking,\n  orderMade\n} from './actions'\nimport Token from '../abis/Token.json'\nimport Exchange from '../abis/Exchange.json'\nimport { ETHER_ADDRESS } from '../helpers'\n\nexport const loadWeb3 = async (dispatch) => {\n  if(typeof window.ethereum!=='undefined'){\n    const web3 = new Web3(window.ethereum)\n    dispatch(web3Loaded(web3))\n    return web3\n  } else {\n    window.alert('Please install MetaMask')\n    window.location.assign(\"https://metamask.io/\")\n  }\n}\n\nexport const loadAccount = async (web3, dispatch) => {\n  const accounts = await web3.eth.requestAccounts()\n  const account = await accounts[0]\n  if(typeof account !== 'undefined'){\n    dispatch(web3AccountLoaded(account))\n    return account\n  } else {\n    window.alert('Please login with MetaMask')\n    return null\n  }\n}\n\nexport const loadToken = async (web3, networkId, dispatch) => {\n  try {\n    const token = new web3.eth.Contract(Token.abi, Token.networks[networkId].address)\n    dispatch(tokenLoaded(token))\n    return token\n  } catch (error) {\n    console.log('Contract not deployed to the current network. Please select another network with Metamask.')\n    return null\n  }\n}\n\nexport const loadExchange = async (web3, networkId, dispatch) => {\n  try {\n    const exchange = new web3.eth.Contract(Exchange.abi, Exchange.networks[networkId].address)\n    dispatch(exchangeLoaded(exchange))\n    return exchange\n  } catch (error) {\n    console.log('Contract not deployed to the current network. Please select another network with Metamask.')\n    return null\n  }\n}\n\nexport const loadAllOrders = async (exchange, dispatch) => {\n  // Fetch cancelled orders with the \"Cancel\" event stream\n  const cancelStream = await exchange.getPastEvents('Cancel', { fromBlock: 0, toBlock: 'latest' })\n  // Format cancelled orders\n  const cancelledOrders = cancelStream.map((event) => event.returnValues)\n  // Add cancelled orders to the redux store\n  dispatch(cancelledOrdersLoaded(cancelledOrders))\n\n  // Fetch filled orders with the \"Trade\" event stream\n  const tradeStream = await exchange.getPastEvents('Trade', { fromBlock: 0, toBlock: 'latest' })\n  // Format filled orders\n  const filledOrders = tradeStream.map((event) => event.returnValues)\n  // Add cancelled orders to the redux store\n  dispatch(filledOrdersLoaded(filledOrders))\n\n  // Load order stream\n  const orderStream = await exchange.getPastEvents('Order', { fromBlock: 0,  toBlock: 'latest' })\n  // Format order stream\n  const allOrders = orderStream.map((event) => event.returnValues)\n  // Add open orders to the redux store\n  dispatch(allOrdersLoaded(allOrders))\n}\n\nexport const cancelOrder = (dispatch, exchange, order, account) => {\n  exchange.methods.cancelOrder(order.id).send({ from: account })\n  .on('transactionHash', (hash) => {\n     dispatch(orderCancelling())\n  })\n  .on('error', (error) => {\n    console.log(error)\n    window.alert('There was an error!')\n  })\n}\n\nexport const subscribeToEvents = async (exchange, dispatch) => {\n  exchange.events.Cancel({}, (error, event) => {\n    dispatch(orderCancelled(event.returnValues))\n  })\n\n  exchange.events.Trade({}, (error, event) => {\n    dispatch(orderFilled(event.returnValues))\n  })\n\n  exchange.events.Deposit({}, (error, event) => {\n    dispatch(balancesLoaded())\n  })\n\n  exchange.events.Withdraw({}, (error, event) => {\n    dispatch(balancesLoaded())\n  })\n\n  exchange.events.Order({}, (error, event) => {\n    dispatch(orderMade(event.returnValues))\n  })\n}\n\nexport const fillOrder = (dispatch, exchange, order, account) => {\n  exchange.methods.fillOrder(order.id).send({ from: account })\n  .on('transactionHash', (hash) => {\n     dispatch(orderFilling())\n  })\n  .on('error', (error) => {\n    console.log(error)\n    window.alert('There was an error!')\n  })\n}\n\nexport const loadBalances = async (dispatch, web3, exchange, token, account) => {\n  if(typeof account !== 'undefined') {\n      // Ether balance in wallet\n      const etherBalance = await web3.eth.getBalance(account)\n      dispatch(etherBalanceLoaded(etherBalance))\n\n      // Token balance in wallet\n      const tokenBalance = await token.methods.balanceOf(account).call()\n      dispatch(tokenBalanceLoaded(tokenBalance))\n\n      // Ether balance in exchange\n      const exchangeEtherBalance = await exchange.methods.balanceOf(ETHER_ADDRESS, account).call()\n      dispatch(exchangeEtherBalanceLoaded(exchangeEtherBalance))\n\n      // Token balance in exchange\n      const exchangeTokenBalance = await exchange.methods.balanceOf(token.options.address, account).call()\n      dispatch(exchangeTokenBalanceLoaded(exchangeTokenBalance))\n\n      // Trigger all balances loaded\n      dispatch(balancesLoaded())\n    } else {\n      window.alert('Please login with MetaMask')\n    }\n}\n\nexport const depositEther = (dispatch, exchange, web3, amount, account) => {\n  exchange.methods.depositEther().send({ from: account,  value: web3.utils.toWei(amount, 'ether') })\n  .on('transactionHash', (hash) => {\n    dispatch(balancesLoading())\n  })\n  .on('error',(error) => {\n    console.error(error)\n    window.alert(`There was an error!`)\n  })\n}\n\nexport const withdrawEther = (dispatch, exchange, web3, amount, account) => {\n  exchange.methods.withdrawEther(web3.utils.toWei(amount, 'ether')).send({ from: account })\n  .on('transactionHash', (hash) => {\n    dispatch(balancesLoading())\n  })\n  .on('error',(error) => {\n    console.error(error)\n    window.alert(`There was an error!`)\n  })\n}\n\nexport const depositToken = (dispatch, exchange, web3, token, amount, account) => {\n  amount = web3.utils.toWei(amount, 'ether')\n\n  token.methods.approve(exchange.options.address, amount).send({ from: account })\n  .on('transactionHash', (hash) => {\n    exchange.methods.depositToken(token.options.address, amount).send({ from: account })\n    .on('transactionHash', (hash) => {\n      dispatch(balancesLoading())\n    })\n    .on('error',(error) => {\n      console.error(error)\n      window.alert(`There was an error!`)\n    })\n  })\n}\n\nexport const withdrawToken = (dispatch, exchange, web3, token, amount, account) => {\n  exchange.methods.withdrawToken(token.options.address, web3.utils.toWei(amount, 'ether')).send({ from: account })\n  .on('transactionHash', (hash) => {\n    dispatch(balancesLoading())\n  })\n  .on('error',(error) => {\n    console.error(error)\n    window.alert(`There was an error!`)\n  })\n}\n\nexport const makeBuyOrder = (dispatch, exchange, token, web3, order, account) => {\n  const tokenGet = token.options.address\n  const amountGet = web3.utils.toWei(order.amount, 'ether')\n  const tokenGive = ETHER_ADDRESS\n  const amountGive = web3.utils.toWei((order.amount * order.price).toString(), 'ether')\n\n  exchange.methods.makeOrder(tokenGet, amountGet, tokenGive, amountGive).send({ from: account })\n  .on('transactionHash', (hash) => {\n    dispatch(buyOrderMaking())\n  })\n  .on('error',(error) => {\n    console.error(error)\n    window.alert(`There was an error!`)\n  })\n}\n\nexport const makeSellOrder = (dispatch, exchange, token, web3, order, account) => {\n  const tokenGet = ETHER_ADDRESS\n  const amountGet = web3.utils.toWei((order.amount * order.price).toString(), 'ether')\n  const tokenGive = token.options.address\n  const amountGive = web3.utils.toWei(order.amount, 'ether')\n\n  exchange.methods.makeOrder(tokenGet, amountGet, tokenGive, amountGive).send({ from: account })\n  .on('transactionHash', (hash) => {\n    dispatch(sellOrderMaking())\n  })\n  .on('error',(error) => {\n    console.error(error)\n    window.alert(`There was an error!`)\n  })\n}\n\n"]},"metadata":{},"sourceType":"module"}