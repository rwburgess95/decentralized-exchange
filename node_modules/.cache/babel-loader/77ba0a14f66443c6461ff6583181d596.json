{"ast":null,"code":"import { get } from 'lodash';\nimport { createSelector } from 'reselect';\n\nvar account = function account(state) {\n  return get(state, 'web3.account');\n};\n\nexport var accountSelector = createSelector(account, function (a) {\n  return a;\n});\n\nvar tokenLoaded = function tokenLoaded(state) {\n  return get(state, 'token.loaded', false);\n};\n\nexport var tokenLoadedSelector = createSelector(tokenLoaded, function (tl) {\n  return tl;\n});\n\nvar exchangeLoaded = function exchangeLoaded(state) {\n  return get(state, 'exchange.loaded', false);\n};\n\nexport var exchangeLoadedSelector = createSelector(exchangeLoaded, function (el) {\n  return el;\n});\nexport var contractsLoadedSelector = createSelector(tokenLoaded, exchangeLoaded, function (tl, el) {\n  return tl && el;\n});","map":{"version":3,"sources":["/Users/raymondburgess/Dapps/blockchain-developer-bootcamp-v2/src/store/selectors.js"],"names":["get","createSelector","account","state","accountSelector","a","tokenLoaded","tokenLoadedSelector","tl","exchangeLoaded","exchangeLoadedSelector","el","contractsLoadedSelector"],"mappings":"AAAA,SAASA,GAAT,QAAoB,QAApB;AACA,SAASC,cAAT,QAA+B,UAA/B;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK;AAAA,SAAIH,GAAG,CAACG,KAAD,EAAQ,cAAR,CAAP;AAAA,CAArB;;AACA,OAAO,IAAMC,eAAe,GAAGH,cAAc,CAACC,OAAD,EAAU,UAAAG,CAAC;AAAA,SAAIA,CAAJ;AAAA,CAAX,CAAtC;;AAEP,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAH,KAAK;AAAA,SAAIH,GAAG,CAACG,KAAD,EAAQ,cAAR,EAAwB,KAAxB,CAAP;AAAA,CAAzB;;AACA,OAAO,IAAMI,mBAAmB,GAAGN,cAAc,CAACK,WAAD,EAAc,UAAAE,EAAE;AAAA,SAAIA,EAAJ;AAAA,CAAhB,CAA1C;;AAEP,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAN,KAAK;AAAA,SAAIH,GAAG,CAACG,KAAD,EAAQ,iBAAR,EAA2B,KAA3B,CAAP;AAAA,CAA5B;;AACA,OAAO,IAAMO,sBAAsB,GAAGT,cAAc,CAACQ,cAAD,EAAiB,UAAAE,EAAE;AAAA,SAAIA,EAAJ;AAAA,CAAnB,CAA7C;AAEP,OAAO,IAAMC,uBAAuB,GAAGX,cAAc,CACnDK,WADmD,EAEnDG,cAFmD,EAGnD,UAACD,EAAD,EAAKG,EAAL;AAAA,SAAaH,EAAE,IAAIG,EAAnB;AAAA,CAHmD,CAA9C","sourcesContent":["import { get } from 'lodash'\nimport { createSelector } from 'reselect'\n\nconst account = state => get(state, 'web3.account')\nexport const accountSelector = createSelector(account, a => a)\n\nconst tokenLoaded = state => get(state, 'token.loaded', false)\nexport const tokenLoadedSelector = createSelector(tokenLoaded, tl => tl)\n\nconst exchangeLoaded = state => get(state, 'exchange.loaded', false)\nexport const exchangeLoadedSelector = createSelector(exchangeLoaded, el => el)\n\nexport const contractsLoadedSelector = createSelector(\n  tokenLoaded,\n  exchangeLoaded,\n  (tl, el) => (tl && el)\n)"]},"metadata":{},"sourceType":"module"}