{"ast":null,"code":"import _toConsumableArray from\"/Users/raymondburgess/Dapps/blockchain-developer-bootcamp-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/raymondburgess/Dapps/blockchain-developer-bootcamp-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{combineReducers}from'redux';function web3(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'WEB3_LOADED':return _objectSpread(_objectSpread({},state),{},{connection:action.connection});case'WEB3_ACCOUNT_LOADED':return _objectSpread(_objectSpread({},state),{},{account:action.account});case'ETHER_BALANCE_LOADED':return _objectSpread(_objectSpread({},state),{},{balance:action.balance});default:return state;}}function token(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'TOKEN_LOADED':return _objectSpread(_objectSpread({},state),{},{loaded:true,connection:action.contract});case'TOKEN_BALANCE_LOADED':return _objectSpread(_objectSpread({},state),{},{balance:action.balance});default:return state;}}function exchange(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var action=arguments.length>1?arguments[1]:undefined;var index,data;switch(action.type){case'EXCHANGE_LOADED':return _objectSpread(_objectSpread({},state),{},{loaded:true,connection:action.contract});case'CANCELLED_ORDERS_LOADED':return _objectSpread(_objectSpread({},state),{},{cancelledOrders:{loaded:true,data:action.cancelledOrders}});case'FILLED_ORDERS_LOADED':return _objectSpread(_objectSpread({},state),{},{filledOrders:{loaded:true,data:action.filledOrders}});case'ALL_ORDERS_LOADED':return _objectSpread(_objectSpread({},state),{},{allOrders:{loaded:true,data:action.allOrders}});case'ORDER_CANCELLING':return _objectSpread(_objectSpread({},state),{},{orderCancelling:true});case'ORDER_CANCELLED':return _objectSpread(_objectSpread({},state),{},{orderCancelling:false,cancelledOrders:_objectSpread(_objectSpread({},state.cancelledOrders),{},{data:[].concat(_toConsumableArray(state.cancelledOrders.data),[action.order])})});case'ORDER_FILLED':// Prevent duplicate orders\nindex=state.filledOrders.data.findIndex(function(order){return order.id===action.order.id;});if(index===-1){data=[].concat(_toConsumableArray(state.filledOrders.data),[action.order]);}else{data=state.filledOrders.data;}return _objectSpread(_objectSpread({},state),{},{orderFilling:false,filledOrders:_objectSpread(_objectSpread({},state.filledOrders),{},{data:data})});case'ORDER_FILLING':return _objectSpread(_objectSpread({},state),{},{orderFilling:true});case'EXCHANGE_ETHER_BALANCE_LOADED':return _objectSpread(_objectSpread({},state),{},{etherBalance:action.balance});case'EXCHANGE_TOKEN_BALANCE_LOADED':return _objectSpread(_objectSpread({},state),{},{tokenBalance:action.balance});case'BALANCES_LOADING':return _objectSpread(_objectSpread({},state),{},{balancesLoading:true});case'BALANCES_LOADED':return _objectSpread(_objectSpread({},state),{},{balancesLoading:false});case'ETHER_DEPOSIT_AMOUNT_CHANGED':return _objectSpread(_objectSpread({},state),{},{etherDepositAmount:action.amount});case'ETHER_WITHDRAW_AMOUNT_CHANGED':return _objectSpread(_objectSpread({},state),{},{etherWithdrawAmount:action.amount});case'TOKEN_DEPOSIT_AMOUNT_CHANGED':return _objectSpread(_objectSpread({},state),{},{tokenDepositAmount:action.amount});case'TOKEN_WITHDRAW_AMOUNT_CHANGED':return _objectSpread(_objectSpread({},state),{},{tokenWithdrawAmount:action.amount});case'BUY_ORDER_AMOUNT_CHANGED':return _objectSpread(_objectSpread({},state),{},{buyOrder:_objectSpread(_objectSpread({},state.buyOrder),{},{amount:action.amount})});case'BUY_ORDER_PRICE_CHANGED':return _objectSpread(_objectSpread({},state),{},{buyOrder:_objectSpread(_objectSpread({},state.buyOrder),{},{price:action.price})});case'BUY_ORDER_MAKING':return _objectSpread(_objectSpread({},state),{},{buyOrder:_objectSpread(_objectSpread({},state.buyOrder),{},{amount:null,price:null,making:true})});case'ORDER_MADE':// Prevent duplicate orders\nindex=state.allOrders.data.findIndex(function(order){return order.id===action.order.id;});if(index===-1){data=[].concat(_toConsumableArray(state.allOrders.data),[action.order]);}else{data=state.allOrders.data;}return _objectSpread(_objectSpread({},state),{},{allOrders:_objectSpread(_objectSpread({},state.allOrders),{},{data:data}),buyOrder:_objectSpread(_objectSpread({},state.buyOrder),{},{making:false}),sellOrder:_objectSpread(_objectSpread({},state.sellOrder),{},{making:false})});case'SELL_ORDER_AMOUNT_CHANGED':return _objectSpread(_objectSpread({},state),{},{sellOrder:_objectSpread(_objectSpread({},state.sellOrder),{},{amount:action.amount})});case'SELL_ORDER_PRICE_CHANGED':return _objectSpread(_objectSpread({},state),{},{sellOrder:_objectSpread(_objectSpread({},state.sellOrder),{},{price:action.price})});case'SELL_ORDER_MAKING':return _objectSpread(_objectSpread({},state),{},{sellOrder:_objectSpread(_objectSpread({},state.sellOrder),{},{amount:null,price:null,making:true})});default:return state;}}var rootReducer=combineReducers({web3:web3,token:token,exchange:exchange});export default rootReducer;","map":{"version":3,"sources":["/Users/raymondburgess/Dapps/blockchain-developer-bootcamp-v2/src/store/reducers.js"],"names":["combineReducers","web3","state","action","type","connection","account","balance","token","loaded","contract","exchange","index","data","cancelledOrders","filledOrders","allOrders","orderCancelling","order","findIndex","id","orderFilling","etherBalance","tokenBalance","balancesLoading","etherDepositAmount","amount","etherWithdrawAmount","tokenDepositAmount","tokenWithdrawAmount","buyOrder","price","making","sellOrder","rootReducer"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\n\nfunction web3(state = {}, action) {\n  switch (action.type) {\n  \tcase 'WEB3_LOADED':\n  \t\treturn { ...state, connection: action.connection} \n  \tcase 'WEB3_ACCOUNT_LOADED':\n  \t\treturn { ...state, account: action.account }\n    case 'ETHER_BALANCE_LOADED':\n      return { ...state, balance: action.balance }\n    default:\n      return state\n  }\n}\n\nfunction token(state = {}, action) {\n  switch (action.type) {\n  \tcase 'TOKEN_LOADED':\n  \t\treturn { ...state, loaded: true, connection: action.contract}\n    case 'TOKEN_BALANCE_LOADED':\n      return { ...state, balance: action.balance } \n    default:\n      return state\n  }\n}\n\nfunction exchange(state = {}, action) {\n  let index, data\n  switch (action.type) {\n  \tcase 'EXCHANGE_LOADED':\n  \t\treturn { ...state, loaded: true, connection: action.contract}\n  \tcase 'CANCELLED_ORDERS_LOADED':\n      return { ...state, cancelledOrders: { loaded: true, data: action.cancelledOrders } }\n    case 'FILLED_ORDERS_LOADED':\n      return { ...state, filledOrders: { loaded: true, data: action.filledOrders } }\n    case 'ALL_ORDERS_LOADED':\n      return { ...state, allOrders: { loaded: true, data: action.allOrders } }\n    case 'ORDER_CANCELLING':\n      return {...state, orderCancelling: true }\n    case 'ORDER_CANCELLED':\n      return {\n              ...state,\n              orderCancelling: false,\n              cancelledOrders: {\n                ...state.cancelledOrders,\n                data: [\n                  ...state.cancelledOrders.data,\n                  action.order\n                ]\n              }\n            }\n    case 'ORDER_FILLED':\n      // Prevent duplicate orders\n      index = state.filledOrders.data.findIndex(order => order.id === action.order.id);\n\n      if(index === -1) {\n        data = [...state.filledOrders.data, action.order]\n      } else {\n        data = state.filledOrders.data\n      }\n\n      return {\n        ...state,\n        orderFilling: false,\n        filledOrders: {\n          ...state.filledOrders,\n          data\n        }\n      }\n\n    case 'ORDER_FILLING':\n      return { ...state, orderFilling: true }\n    case 'EXCHANGE_ETHER_BALANCE_LOADED':\n      return { ...state, etherBalance: action.balance }\n    case 'EXCHANGE_TOKEN_BALANCE_LOADED':\n      return { ...state, tokenBalance: action.balance }\n    case 'BALANCES_LOADING':\n      return { ...state, balancesLoading: true }\n    case 'BALANCES_LOADED':\n      return { ...state, balancesLoading: false }\n    case 'ETHER_DEPOSIT_AMOUNT_CHANGED':\n      return { ...state, etherDepositAmount: action.amount }\n    case 'ETHER_WITHDRAW_AMOUNT_CHANGED':\n      return { ...state, etherWithdrawAmount: action.amount }\n    case 'TOKEN_DEPOSIT_AMOUNT_CHANGED':\n      return { ...state, tokenDepositAmount: action.amount }\n    case 'TOKEN_WITHDRAW_AMOUNT_CHANGED':\n      return { ...state, tokenWithdrawAmount: action.amount }\n    case 'BUY_ORDER_AMOUNT_CHANGED':\n      return { ...state, buyOrder: { ...state.buyOrder, amount: action.amount } }\n    case 'BUY_ORDER_PRICE_CHANGED':\n      return { ...state, buyOrder: { ...state.buyOrder, price: action.price } }\n    case 'BUY_ORDER_MAKING':\n      return { ...state, buyOrder: { ...state.buyOrder, amount: null, price: null, making: true } }\n\n    case 'ORDER_MADE':\n      // Prevent duplicate orders\n      index = state.allOrders.data.findIndex(order => order.id === action.order.id);\n\n      if(index === -1) {\n        data = [...state.allOrders.data, action.order]\n      } else {\n        data = state.allOrders.data\n      }\n\n      return {\n        ...state,\n        allOrders: {\n          ...state.allOrders,\n          data\n        },\n        buyOrder: {\n          ...state.buyOrder,\n          making: false\n        },\n        sellOrder: {\n          ...state.sellOrder,\n          making: false\n        }\n      }\n\n    case 'SELL_ORDER_AMOUNT_CHANGED':\n      return { ...state, sellOrder: { ...state.sellOrder, amount: action.amount } }\n    case 'SELL_ORDER_PRICE_CHANGED':\n      return { ...state, sellOrder: { ...state.sellOrder, price: action.price } }\n    case 'SELL_ORDER_MAKING':\n      return { ...state, sellOrder: { ...state.sellOrder, amount: null, price: null, making: true } }\n    default:\n      return state\n  }\n}\n\nconst rootReducer = combineReducers({\n\tweb3,\n\ttoken,\n\texchange\n})\n\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}