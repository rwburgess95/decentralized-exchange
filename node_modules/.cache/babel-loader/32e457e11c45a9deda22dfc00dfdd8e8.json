{"ast":null,"code":"import _objectSpread from \"/Users/raymondburgess/Dapps/blockchain-developer-bootcamp-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { combineReducers } from 'redux';\n\nfunction web3() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'WEB3_LOADED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        connection: action.connection\n      });\n\n    case 'WEB3_ACCOUNT_LOADED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        account: action.account\n      });\n\n    default:\n      return state;\n  }\n}\n\nfunction token() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'TOKEN_LOADED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loaded: true,\n        contract: action.contract\n      });\n\n    default:\n      return state;\n  }\n}\n\nfunction exchange() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'EXCHANGE_LOADED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loaded: true,\n        contract: action.contract\n      });\n\n    case 'CANCELLED_ORDERS_LOADED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cancelledOrders: {\n          loaded: true,\n          data: action.cancelledOrders\n        }\n      });\n\n    case 'FILLED_ORDERS_LOADED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filledOrders: {\n          loaded: true,\n          data: action.filledOrders\n        }\n      });\n\n    case 'ALL_ORDERS_LOADED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        allOrders: {\n          loaded: true,\n          data: action.allOrders\n        }\n      });\n\n    default:\n      return state;\n  }\n}\n\nvar rootReducer = combineReducers({\n  web3: web3,\n  token: token,\n  exchange: exchange\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/raymondburgess/Dapps/blockchain-developer-bootcamp-v2/src/store/reducers.js"],"names":["combineReducers","web3","state","action","type","connection","account","token","loaded","contract","exchange","cancelledOrders","data","filledOrders","allOrders","rootReducer"],"mappings":";AAAA,SAASA,eAAT,QAAgC,OAAhC;;AAEA,SAASC,IAAT,GAAkC;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,6CAAYF,KAAZ;AAAoBG,QAAAA,UAAU,EAAEF,MAAM,CAACE;AAAvC;;AACF,SAAK,qBAAL;AACE,6CAAYH,KAAZ;AAAmBI,QAAAA,OAAO,EAAEH,MAAM,CAACG;AAAnC;;AACF;AACE,aAAOJ,KAAP;AANJ;AAQD;;AAED,SAASK,KAAT,GAAmC;AAAA,MAApBL,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,6CAAYF,KAAZ;AAAmBM,QAAAA,MAAM,EAAE,IAA3B;AAAiCC,QAAAA,QAAQ,EAAEN,MAAM,CAACM;AAAlD;;AACF;AACE,aAAOP,KAAP;AAJJ;AAMD;;AAED,SAASQ,QAAT,GAAsC;AAAA,MAApBR,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AACpC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACE,6CAAYF,KAAZ;AAAmBM,QAAAA,MAAM,EAAE,IAA3B;AAAiCC,QAAAA,QAAQ,EAAEN,MAAM,CAACM;AAAlD;;AACF,SAAK,yBAAL;AACE,6CAAYP,KAAZ;AAAmBS,QAAAA,eAAe,EAAE;AAAEH,UAAAA,MAAM,EAAE,IAAV;AAAgBI,UAAAA,IAAI,EAAET,MAAM,CAACQ;AAA7B;AAApC;;AACF,SAAK,sBAAL;AACE,6CAAYT,KAAZ;AAAmBW,QAAAA,YAAY,EAAE;AAAEL,UAAAA,MAAM,EAAE,IAAV;AAAgBI,UAAAA,IAAI,EAAET,MAAM,CAACU;AAA7B;AAAjC;;AACF,SAAK,mBAAL;AACE,6CAAYX,KAAZ;AAAmBY,QAAAA,SAAS,EAAE;AAAEN,UAAAA,MAAM,EAAE,IAAV;AAAgBI,UAAAA,IAAI,EAAET,MAAM,CAACW;AAA7B;AAA9B;;AACF;AACE,aAAOZ,KAAP;AAVJ;AAYD;;AAED,IAAMa,WAAW,GAAGf,eAAe,CAAC;AAClCC,EAAAA,IAAI,EAAJA,IADkC;AAElCM,EAAAA,KAAK,EAALA,KAFkC;AAGlCG,EAAAA,QAAQ,EAARA;AAHkC,CAAD,CAAnC;AAMA,eAAeK,WAAf","sourcesContent":["import { combineReducers } from 'redux';\n\nfunction web3(state = {}, action) {\n  switch (action.type) {\n    case 'WEB3_LOADED':\n      return { ...state,  connection: action.connection }\n    case 'WEB3_ACCOUNT_LOADED':\n      return { ...state, account: action.account }\n    default:\n      return state\n  }\n}\n\nfunction token(state = {}, action) {\n  switch (action.type) {\n    case 'TOKEN_LOADED':\n      return { ...state, loaded: true, contract: action.contract }\n    default:\n      return state\n  }\n}\n\nfunction exchange(state = {}, action) {\n  switch (action.type) {\n    case 'EXCHANGE_LOADED':\n      return { ...state, loaded: true, contract: action.contract }\n    case 'CANCELLED_ORDERS_LOADED':\n      return { ...state, cancelledOrders: { loaded: true, data: action.cancelledOrders } }\n    case 'FILLED_ORDERS_LOADED':\n      return { ...state, filledOrders: { loaded: true, data: action.filledOrders } }\n    case 'ALL_ORDERS_LOADED':\n      return { ...state, allOrders: { loaded: true, data: action.allOrders } }\n    default:\n      return state\n  }\n}\n\nconst rootReducer = combineReducers({\n  web3,\n  token,\n  exchange\n})\n\nexport default rootReducer\n"]},"metadata":{},"sourceType":"module"}