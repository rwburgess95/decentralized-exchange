{"ast":null,"code":"import _regeneratorRuntime from \"/Users/raymondburgess/Dapps/blockchain-developer-bootcamp-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/raymondburgess/Dapps/blockchain-developer-bootcamp-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/raymondburgess/Dapps/blockchain-developer-bootcamp-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/raymondburgess/Dapps/blockchain-developer-bootcamp-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/raymondburgess/Dapps/blockchain-developer-bootcamp-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/raymondburgess/Dapps/blockchain-developer-bootcamp-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/raymondburgess/Dapps/blockchain-developer-bootcamp-v2/src/components/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport Web3 from 'web3';\nimport Navbar from './Navbar';\nimport Content from './Content';\nimport Token from '../abis/Token.json';\nimport { loadWeb3, loadAccount, loadToken, loadExchange } from '../store/interactions.js';\nimport { exchangeLoadedSelector, contractsLoadedSelector } from '../store/selectors';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadBlockchainData(this.props.dispatch);\n    }\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n        var web3, networkId, accounts, token, exchange;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(this.props.exchangeLoaded, 'does it ever return false');\n                _context.next = 3;\n                return loadWeb3(dispatch);\n\n              case 3:\n                web3 = _context.sent;\n                _context.next = 6;\n                return web3.eth.net.getId();\n\n              case 6:\n                networkId = _context.sent;\n                _context.next = 9;\n                return loadAccount(web3, dispatch);\n\n              case 9:\n                accounts = _context.sent;\n                _context.next = 12;\n                return loadToken(web3, networkId, dispatch);\n\n              case 12:\n                token = _context.sent;\n\n                if (token) {\n                  _context.next = 16;\n                  break;\n                }\n\n                window.alert('Token smart contract not detected on the current network. Please select another network with Metamask');\n                return _context.abrupt(\"return\");\n\n              case 16:\n                console.log('exchange before loading', exchange);\n                exchange = undefined; //= await loadExchange(web3, networkId, dispatch)\n                //console.log('exchange after loading', exchange)\n\n                if (exchange) {\n                  _context.next = 21;\n                  break;\n                }\n\n                window.alert('Exchange smart contract not detected on the current network. Please select another network with Metamask');\n                return _context.abrupt(\"return\");\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadBlockchainData(_x) {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }), console.log(this.props.exchangeLoaded), this.props.contractsLoaded ? /*#__PURE__*/React.createElement(Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 40\n        }\n      }) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 54\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    contractsLoaded: contractsLoadedSelector(state),\n    exchangeLoaded: exchangeLoadedSelector(state)\n  };\n}\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/raymondburgess/Dapps/blockchain-developer-bootcamp-v2/src/components/App.js"],"names":["React","Component","connect","Web3","Navbar","Content","Token","loadWeb3","loadAccount","loadToken","loadExchange","exchangeLoadedSelector","contractsLoadedSelector","App","loadBlockchainData","props","dispatch","console","log","exchangeLoaded","web3","eth","net","getId","networkId","accounts","token","window","alert","exchange","undefined","contractsLoaded","mapStateToProps","state"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SACEC,QADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,YAJF,QAKU,0BALV;AAMA,SAASC,sBAAT,EAAiCC,uBAAjC,QAAgE,oBAAhE;;IACMC,G;;;;;;;;;;;;;WACJ,8BAAqB;AAEnB,WAAKC,kBAAL,CAAwB,KAAKC,KAAL,CAAWC,QAAnC;AACD;;;;yFAED,iBAAyBA,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACEC,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWI,cAAvB,EAAuC,2BAAvC;AADF;AAAA,uBAEqBZ,QAAQ,CAACS,QAAD,CAF7B;;AAAA;AAEQI,gBAAAA,IAFR;AAAA;AAAA,uBAG0BA,IAAI,CAACC,GAAL,CAASC,GAAT,CAAaC,KAAb,EAH1B;;AAAA;AAGQC,gBAAAA,SAHR;AAAA;AAAA,uBAIyBhB,WAAW,CAACY,IAAD,EAAOJ,QAAP,CAJpC;;AAAA;AAIQS,gBAAAA,QAJR;AAAA;AAAA,uBAKsBhB,SAAS,CAACW,IAAD,EAAOI,SAAP,EAAkBR,QAAlB,CAL/B;;AAAA;AAKQU,gBAAAA,KALR;;AAAA,oBAMMA,KANN;AAAA;AAAA;AAAA;;AAOIC,gBAAAA,MAAM,CAACC,KAAP,CAAa,uGAAb;AAPJ;;AAAA;AAUEX,gBAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCW,QAAvC;AACMA,gBAAAA,QAXR,GAWmBC,SAXnB,EAW6B;AAC3B;;AAZF,oBAaMD,QAbN;AAAA;AAAA;AAAA;;AAcIF,gBAAAA,MAAM,CAACC,KAAP,CAAa,0GAAb;AAdJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAmBA,kBAAS;AACP,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEIX,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWI,cAAvB,CAFJ,EAGI,KAAKJ,KAAL,CAAWgB,eAAX,gBAA6B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA7B,gBAA2C;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAH/C,CADF;AAQD;;;;EAlCe9B,S;;AAqClB,SAAS+B,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLF,IAAAA,eAAe,EAAEnB,uBAAuB,CAACqB,KAAD,CADnC;AAELd,IAAAA,cAAc,EAAER,sBAAsB,CAACsB,KAAD;AAFjC,GAAP;AAID;;AAED,eAAe/B,OAAO,CAAC8B,eAAD,CAAP,CAAyBnB,GAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { connect } from 'react-redux' \nimport Web3 from 'web3'\nimport Navbar from './Navbar'\nimport Content from './Content'\nimport Token from '../abis/Token.json'\nimport { \n  loadWeb3, \n  loadAccount, \n  loadToken, \n  loadExchange\n   } from '../store/interactions.js';\nimport { exchangeLoadedSelector, contractsLoadedSelector } from '../store/selectors'\nclass App extends Component {\n  componentWillMount() {\n\n    this.loadBlockchainData(this.props.dispatch)\n  }\n\n  async loadBlockchainData(dispatch){\n    console.log(this.props.exchangeLoaded, 'does it ever return false')\n    const web3 = await loadWeb3(dispatch)\n    const networkId = await web3.eth.net.getId()\n    const accounts = await loadAccount(web3, dispatch)\n    const token = await loadToken(web3, networkId, dispatch)\n    if(!token) {\n      window.alert('Token smart contract not detected on the current network. Please select another network with Metamask')\n      return\n    }\n    console.log('exchange before loading', exchange)\n    const exchange = undefined //= await loadExchange(web3, networkId, dispatch)\n    //console.log('exchange after loading', exchange)\n    if(!exchange) {\n      window.alert('Exchange smart contract not detected on the current network. Please select another network with Metamask')\n      return\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar />\n        { console.log(this.props.exchangeLoaded) }\n        { this.props.contractsLoaded ? <Content /> : <div className=\"content\"></div> }\n        \n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    contractsLoaded: contractsLoadedSelector(state),\n    exchangeLoaded: exchangeLoadedSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}